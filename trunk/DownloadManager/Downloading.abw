<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE abiword PUBLIC "-//ABISOURCE//DTD AWML 1.0 Strict//EN" "http://www.abisource.com/awml.dtd">
<abiword template="false" styles="unlocked" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:math="http://www.w3.org/1998/Math/MathML" xid-max="65" xmlns:dc="http://purl.org/dc/elements/1.1/" fileformat="1.0" xmlns:svg="http://www.w3.org/2000/svg" xmlns:awml="http://www.abisource.com/awml.dtd" xmlns="http://www.abisource.com/awml.dtd" xmlns:xlink="http://www.w3.org/1999/xlink" version="0.99.2" xml:space="preserve" props="dom-dir:ltr; document-footnote-restart-section:0; document-endnote-type:numeric; document-endnote-place-enddoc:1; document-endnote-initial:1; lang:en-US; document-endnote-restart-section:0; document-footnote-restart-page:0; document-footnote-type:numeric; document-footnote-initial:1; document-endnote-place-endsection:0">
<!-- ======================================================================== -->
<!-- This file is an AbiWord document.                                        -->
<!-- AbiWord is a free, Open Source word processor.                           -->
<!-- More information about AbiWord is available at http://www.abisource.com/ -->
<!-- You should not edit this file by hand.                                   -->
<!-- ======================================================================== -->

<metadata>
<m key="dc.format">application/x-abiword</m>
<m key="abiword.generator">AbiWord</m>
</metadata>
<history version="2" edit-time="2761" last-saved="1336566208" uid="5a6d5f2c-99cb-11e1-9068-d80b1e699d1e">
<version id="2" started="1336565407" uid="c83f8ca4-99d1-11e1-9068-d80b1e699d1e" auto="0" top-xid="51"/>
</history>
<styles>
<s type="P" name="Normal" followedby="Current Settings" props="font-family:Times New Roman; margin-top:0pt; color:000000; margin-left:0pt; text-position:normal; widows:2; font-style:normal; text-indent:0in; font-variant:normal; font-weight:normal; margin-right:0pt; font-size:12pt; text-decoration:none; margin-bottom:0pt; line-height:1.0; bgcolor:transparent; text-align:left; font-stretch:normal"/>
<s type="C" name="Reference" props="font-size:10pt"/>
</styles>
<pagesize pagetype="Letter" orientation="portrait" width="8.500000" height="11.000000" units="in" page-scale="1.000000"/>
<section xid="11" props="page-margin-footer:0.5in; page-margin-header:0.5in">
<p style="Normal" xid="12"><c props="font-weight:bold">Startup</c></p>
<p style="Normal" xid="1"><c></c></p>
<p style="Normal" xid="2"><c>Checks that file sizes and MD5 for the file match what is in the database unless the MD5 should not be generated. If they match continue loading. If they don’t match restart the download by deleting it and re-adding it to the download list.</c></p>
<p style="Normal" xid="13"><c></c></p>
<p style="Normal" xid="14"><c>Affects DownloadSaver. DownloadSaver will now have to save downloaded and MD5 every time it can.</c></p>
<p style="Normal" xid="3"><c></c></p>
<p style="Normal" xid="4"><c props="font-weight:bold">Adding a new download</c></p>
<p style="Normal" xid="5"><c></c></p>
<p style="Normal" xid="6"><c>Do not look for a temp or save file. Everything else should be done when the download starts.</c></p>
<p style="Normal" xid="52"><c></c></p>
<p style="Normal" xid="53"><c props="font-weight:bold">Deleting a download</c></p>
<p style="Normal" xid="54"><c props="font-weight:bold"></c></p>
<p style="Normal" xid="55"><c props="font-weight:normal">remove the temp file</c></p>
<p style="Normal" xid="56"><c props="font-weight:normal">remove the download</c></p>
<p style="Normal" xid="7"><c></c></p>
<p style="Normal" xid="8"><c props="font-weight:bold">Download task</c></p>
<p style="Normal" xid="9"><c></c></p>
<p style="Normal" xid="43"><c>DownloadProcessor onInit</c></p>
<p style="Normal" xid="44"><c>Check if the save file exists. If it should be overwritten delete it. If the save file should be used:</c></p>
<p style="Normal" xid="48"><c>--get the real file type and image info</c></p>
<p style="Normal" xid="49"><c>--check and MD5 or Parse file</c></p>
<p style="Normal" xid="50"><c>--set downloaded and size.</c></p>
<p style="Normal" xid="51"><c>--the download is complete</c></p>
<p style="Normal" xid="47"><c props="font-family:Times New Roman; font-size:12pt; lang:en-US; text-position:normal; font-weight:normal; font-style:normal; text-decoration:none"></c><c props="font-family:Times New Roman; font-size:12pt; lang:en-US; text-position:normal; font-weight:normal; font-style:normal; text-decoration:none">Check if the temp file exists. If it should be overwritten delete it and init the Download object.</c></p>
<p style="Normal" xid="10"><c>If the content type is not set and the temp/save file exists grab the file type from the file.</c></p>
<p style="Normal" xid="24"><c></c></p>
<p style="Normal" xid="57"><c>Downloader</c></p>
<p style="Normal" xid="15"><c>Connect and get the content type from the connection.</c></p>
<p style="Normal" xid="25"><c></c></p>
<p style="Normal" xid="58"><c>DownloadProcessor</c></p>
<p style="Normal" xid="17"><c>make sure it doesn’t have extra data (only want mime type not utf info)</c></p>
<p style="Normal" xid="16"><c>If the content type does not match the file type restart the download from the begining and init the Download object with no penalty for attempts.</c></p>
<p style="Normal" xid="37"><c>Check the download settings to see if the file should be downloaded. Init the download object delete the files and complete the download.</c></p>
<p style="Normal" xid="18"><c>At this point check if a md5 and parse needs to happen to the file before downloading is started.</c></p>
<p style="Normal" xid="20"><c>--the condition to parse or md5 is the content type and settings. The content type or settings may have been changed since the previous partial download. If that is the case they need to be done with the file before downloading starts.</c></p>
<p style="Normal" xid="19"><c>--if they were not done previously md5 and parse the whole file.</c></p>
<p style="Normal" xid="30"><c>--if the file does not exist the download should restart to get this info</c></p>
<p style="Normal" xid="21"><c>--now the download should be in a state to continue downloading with the current settings and content type in place. This is exactly what the user wants.</c></p>
<p style="Normal" xid="59"><c></c></p>
<p style="Normal" xid="61"><c></c></p>
<p style="Normal" xid="62"><c>Downloader</c></p>
<p style="Normal" xid="60"><c>If the connection is lost reconnect with no penalty to attempts.</c></p>
<p style="Normal" xid="22"><c>Download the file and continue parsing or MD5ing.</c></p>
<p style="Normal" xid="28"><c></c></p>
<p style="Normal" xid="63"><c>DownloadProcessor</c></p>
<p style="Normal" xid="29"><c>Once the download is downloaded get the real file type from the file and overwrite the content type (which could be blank) from the connection.</c></p>
<p style="Normal" xid="39"><c props="font-family:Times New Roman; font-size:12pt; lang:en-US; text-position:normal; font-weight:normal; font-style:normal; text-decoration:none"></c><c props="font-family:Times New Roman; font-size:12pt; lang:en-US; text-position:normal; font-weight:normal; font-style:normal; text-decoration:none">Check the download settings to see if the file should be downloaded if not delete the files and complete the download.</c></p>
<p style="Normal" xid="32"><c>If the file type has been changed since the download finished recheck for MD5ing and Parsing</c></p>
<p style="Normal" xid="35"><c>Move the temp file to the save file.</c></p>
<p style="Normal" xid="34"><c></c></p>
</section>
</abiword>
